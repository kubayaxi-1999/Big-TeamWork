<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.BillMapper">

    <sql id="Base_Column_List">
        id,category,pay_type,money,type,comment,time,user_id
    </sql>

    <select id="selectAll" resultType="com.example.entity.Bill">
        select
        bill.*, user.name as userName
        from bill
        left join user
        on bill.user_id = user.id
        <where>
            <if test="category != null"> and bill.category like concat('%', #{category}, '%')</if>
            <if test="type != null"> and bill.type = #{type}</if>
            <if test="userName != null"> and user.name like concat('%', #{userName}, '%')</if>
            <if test="userId != null"> and bill.user_id = #{userId}</if>
            <if test="start != null"> and bill.time >= #{start}</if>
            <if test="end != null"> and bill.time &lt;= #{end}</if>
        </where>
        order by id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Bill">
        select
        <include refid="Base_Column_List" />
        from bill
        where id = #{id}
    </select>

    <delete id="deleteById">
        delete from bill
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Bill" useGeneratedKeys="true" keyProperty="id">
        insert into bill
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="category != null">category,</if>
            <if test="payType != null">pay_type,</if>
            <if test="money != null">money,</if>
            <if test="type != null">type,</if>
            <if test="comment != null">comment,</if>
            <if test="time != null">time,</if>
            <if test="userId != null">user_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="category != null">#{category},</if>
            <if test="payType != null">#{payType},</if>
            <if test="money != null">#{money},</if>
            <if test="type != null">#{type},</if>
            <if test="comment != null">#{comment},</if>
            <if test="time != null">#{time},</if>
            <if test="userId != null">#{userId},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Bill">
        update bill
        <set>
            <if test="category != null">
                category = #{category},
            </if>
            <if test="payType != null">
                pay_type = #{payType},
            </if>
            <if test="money != null">
                money = #{money},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="comment != null">
                comment = #{comment},
            </if>
            <if test="time != null">
                time = #{time},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>