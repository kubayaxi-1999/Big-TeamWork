<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.NotebookMapper">

    <sql id="Base_Column_List">
        id,title,cover,content,user_id,date
    </sql>

    <select id="selectAll" resultType="com.example.entity.Notebook">
        select
        notebook.* , user.name as userName
        from notebook
        left join user
        on notebook.user_id = user.id
        from notebook
        <where>
            <if test="title != null"> and notebook.title like concat('%', #{title}, '%')</if>
            <if test="userId != null"> and notebook.user = #{userId}</if>
        </where>
        order by id desc
    </select>

    <select id="selectById" resultType="com.example.entity.Notebook">
        select
        <include refid="Base_Column_List" />
        from notebook
        where id = #{id}
    </select>

    <delete id="deleteById">
        delete from notebook
        where  id = #{id}
    </delete>

    <insert id="insert" parameterType="com.example.entity.Notebook" useGeneratedKeys="true" keyProperty="id">
        insert into notebook
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="title != null">title,</if>
            <if test="cover != null">cover,</if>
            <if test="content != null">content,</if>
            <if test="userId != null">user_id,</if>
            <if test="date != null">date,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="title != null">#{title},</if>
            <if test="cover != null">#{cover},</if>
            <if test="content != null">#{content},</if>
            <if test="userId != null">#{userId},</if>
            <if test="date != null">#{date},</if>
        </trim>
    </insert>

    <update id="updateById" parameterType="com.example.entity.Notebook">
        update notebook
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="cover != null">
                cover = #{cover},
            </if>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="date != null">
                date = #{date},
            </if>
        </set>
        where id = #{id}
    </update>

</mapper>